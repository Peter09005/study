## 후위표기법 


학부에서 배웠던 내용이지만 , 구현하는게 생각보다 너무 어려웠다. 
그 문제의 핵심은 연산자는 순서를 고려 (stack) , 알파벳은 그냥 print
알파벳(숫자)는 결과물에서 항상 배열된 순서대로 print된다는걸 눈치채야했을까?? > 이쪽부분이 생각하기가 힘들었던것같다. 
연산자부분은 
- ( )
- * / 
- + -
로 구분된다. 

stack의 목적을 다시 한번 기억하자면 , 스택은 순서를 처리해주는떄 쓰이는 자료구조의 일종이라고 생각하는게 좋다. 
스택은 LIFO 형식이기 때문에, 후위표기에 쓰면 좋은거같다

그렇다면 문제로 들어가보자 

우리 구현해야하는것은 연산자의 print 방식

만약 A+B+C*D 라는 식이 있다고 하자 후위표기법으로 바꾸면 ABCD*++ 이런식일것이다. 
    A*B+C 는 그 반대로 AB*C+ 
    A+B*C/D ABC*D/+ 이런식일텐데  
> 완성된결과를 보면 , 만약 들어온 연산자의 topIndex가 비교대상 element보다 가중치가 크다면 , 작아질떄까지 pop을 한다. 

이제 괄호를 생각해봐야한다. 괄호의 의미는 괄호안의 문자를 먼저 계산하겠다라는 의미 
괄호안의 계산한 값을 먼저 꺼내면 되는거 아닐까 
괄호는 어느 연산자와 비교해봐도 우선순위가 더 빠르므로 , 가장 먼저 계산되어야할것이다. 


    
